version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    restart: unless-stopped
    environment:
      POSTGRES_DB: meditracked
      POSTGRES_USER: meditracked
      POSTGRES_PASSWORD: meditracked_pass
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U meditracked"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for caching and real-time features
  redis:
    image: redis:7-alpine
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # MediTracked Web Application
  web:
    build: .
    restart: unless-stopped
    environment:
      - DEBUG=False
      - DATABASE_URL=postgresql://meditracked:meditracked_pass@db:5432/meditracked
      - REDIS_URL=redis://redis:6379/0
      - SECRET_KEY=your-production-secret-key-here
      - ALLOWED_HOSTS=localhost,127.0.0.1,yourdomain.com
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    command: >
      sh -c "python manage.py migrate &&
             python manage.py setup_meditracked --all &&
             gunicorn --bind 0.0.0.0:8000 --workers 3 meditrack.wsgi:application"

  # Nginx reverse proxy
  nginx:
    image: nginx:alpine
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - static_volume:/app/staticfiles
      - media_volume:/app/media
      - ssl_certs:/etc/nginx/ssl
    depends_on:
      - web

  # Celery worker for background tasks
  celery:
    build: .
    restart: unless-stopped
    environment:
      - DEBUG=False
      - DATABASE_URL=postgresql://meditracked:meditracked_pass@db:5432/meditracked
      - REDIS_URL=redis://redis:6379/0
      - SECRET_KEY=your-production-secret-key-here
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: celery -A meditrack worker -l info

  # Celery beat for scheduled tasks
  celery-beat:
    build: .
    restart: unless-stopped
    environment:
      - DEBUG=False
      - DATABASE_URL=postgresql://meditracked:meditracked_pass@db:5432/meditracked
      - REDIS_URL=redis://redis:6379/0
      - SECRET_KEY=your-production-secret-key-here
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: celery -A meditrack beat -l info --scheduler django_celery_beat.schedulers:DatabaseScheduler

volumes:
  postgres_data:
  redis_data:
  static_volume:
  media_volume:
  ssl_certs:

networks:
  default:
    driver: bridge
